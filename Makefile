.PHONY: help build start stop restart logs status clean deploy health test

# Default target
help:
	@echo "üöÄ CheckMate Bot Management Commands"
	@echo ""
	@echo "üì¶ Docker Commands:"
	@echo "  build     - –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑"
	@echo "  start     - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
	@echo "  stop      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
	@echo "  restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
	@echo "  status    - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
	@echo "  logs      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
	@echo "  clean     - –û—á–∏—Å—Ç–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo ""
	@echo "üîß Deployment Commands:"
	@echo "  deploy    - –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π (build + start)"
	@echo "  health    - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å health check"
	@echo "  test      - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã"
	@echo ""
	@echo "üìã Configuration:"
	@echo "  config    - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é docker-compose"
	@echo "  env       - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä .env —Ñ–∞–π–ª–∞"

# Docker commands
build:
	@echo "üèóÔ∏è  –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑..."
	docker-compose build --no-cache

start:
	@echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å..."
	docker-compose up -d

stop:
	@echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å..."
	docker-compose down

restart: stop start

status:
	@echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
	docker-compose ps

logs:
	@echo "üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞:"
	docker-compose logs --tail=50

logs-follow:
	@echo "üìã –õ–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏:"
	docker-compose logs -f

clean:
	@echo "üßπ –û—á–∏—â–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ä–µ—Å—É—Ä—Å—ã..."
	docker system prune -f
	docker volume prune -f

# Deployment commands
deploy: stop build start
	@echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞..."
	@sleep 10
	@make health
	@make status

health:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º health check..."
	@curl -f http://localhost:8443/health > /dev/null 2>&1 && echo "‚úÖ Health check OK" || echo "‚ùå Health check FAILED"

test:
	@echo "üß™ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã..."
	@if [ -f "test_image_conversion.py" ]; then python test_image_conversion.py; fi

# Configuration commands
config:
	@echo "‚öôÔ∏è  –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:"
	docker-compose config

env:
	@echo "üìù –ü—Ä–∏–º–µ—Ä .env —Ñ–∞–π–ª–∞:"
	@cat env.example

# Development commands
shell:
	@echo "üêö –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É..."
	docker-compose exec checkmate-bot bash

dev:
	@echo "üîß –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

# Backup commands
backup:
	@echo "üíæ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ª–æ–≥–æ–≤..."
	@mkdir -p backups
	@cp checkmate.log backups/checkmate-$(shell date +%Y%m%d-%H%M%S).log
	@echo "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ backups/"

# Monitoring commands
stats:
	@echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤:"
	docker stats checkmate-bot --no-stream

top:
	@echo "‚ö° –ü—Ä–æ—Ü–µ—Å—Å—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:"
	docker-compose top 