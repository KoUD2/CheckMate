#!/usr/bin/env python3
"""
–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –ª–æ–≥–∞–º–∏ CheckMate
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –ø—Ä—è–º–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
"""

import os
import shutil
import subprocess
import sys

def fix_log_issue():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π checkmate.log"""
    print("üîß –≠–ö–°–¢–†–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –õ–û–ì–û–í CHECKMATE")
    print("=" * 50)
    
    try:
        # 1. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        print("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...")
        result = subprocess.run(['docker', 'compose', 'down'], 
                              capture_output=True, text=True, cwd='.')
        if result.returncode == 0:
            print("‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: {result.stderr}")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        if os.path.exists('./checkmate.log') and os.path.isdir('./checkmate.log'):
            print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è checkmate.log")
            print("üóëÔ∏è –£–¥–∞–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é...")
            shutil.rmtree('./checkmate.log')
            print("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞")
        else:
            print("‚ÑπÔ∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è checkmate.log –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        # 3. –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
        if not os.path.exists('./logs'):
            print("üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é logs...")
            os.makedirs('./logs', exist_ok=True)
            print("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è logs —Å–æ–∑–¥–∞–Ω–∞")
        
        # 4. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        print("üîê –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞...")
        os.chmod('./logs', 0o755)
        print("‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        
        # 5. –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...")
        result = subprocess.run(['docker', 'compose', 'up', '-d'], 
                              capture_output=True, text=True, cwd='.')
        if result.returncode == 0:
            print("‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: {result.stderr}")
            return False
        
        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        print("üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å...")
        import time
        time.sleep(5)
        
        result = subprocess.run(['docker', 'compose', 'ps'], 
                              capture_output=True, text=True, cwd='.')
        if result.returncode == 0:
            print("–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:")
            print(result.stdout)
        
        print("\n‚úÖ –ü–†–û–ë–õ–ï–ú–ê –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
        print("üìù –õ–æ–≥–∏ —Ç–µ–ø–µ—Ä—å —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ./logs/")
        print("\nüîç –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print("   docker compose logs -f checkmate-bot")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏: {e}")
        return False

def show_current_status():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ª–æ–≥–æ–≤"""
    print("\nüìä –¢–ï–ö–£–©–ò–ô –°–¢–ê–¢–£–° –õ–û–ì–û–í:")
    print("-" * 30)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º checkmate.log
    if os.path.exists('./checkmate.log'):
        if os.path.isdir('./checkmate.log'):
            print("‚ùå checkmate.log - –î–ò–†–ï–ö–¢–û–†–ò–Ø (–ø—Ä–æ–±–ª–µ–º–∞!)")
        else:
            size = os.path.getsize('./checkmate.log') / (1024*1024)
            print(f"‚úÖ checkmate.log - —Ñ–∞–π–ª ({size:.2f} MB)")
    else:
        print("‚ÑπÔ∏è checkmate.log - –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º logs –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if os.path.exists('./logs'):
        if os.path.isdir('./logs'):
            files = os.listdir('./logs')
            print(f"üìÅ logs/ - –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ({len(files)} —Ñ–∞–π–ª–æ–≤)")
            for file in files[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ñ–∞–π–ª–æ–≤
                path = os.path.join('./logs', file)
                if os.path.isfile(path):
                    size = os.path.getsize(path) / (1024*1024)
                    print(f"   üìÑ {file} ({size:.2f} MB)")
        else:
            print("‚ùå logs - —Ñ–∞–π–ª (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è!)")
    else:
        print("‚ÑπÔ∏è logs/ - –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("–≠–ö–°–¢–†–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –õ–û–ì–û–í CHECKMATE")
    print("====================================")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    show_current_status()
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å
    if os.path.exists('./checkmate.log') and os.path.isdir('./checkmate.log'):
        print("\n‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–ê –ü–†–û–ë–õ–ï–ú–ê: checkmate.log —è–≤–ª—è–µ—Ç—Å—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π!")
        response = input("–ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É? (y/N): ").strip().lower()
        
        if response in ['y', 'yes', '–¥–∞']:
            success = fix_log_issue()
            if success:
                print("\nüéâ –ü—Ä–æ–±–ª–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
            else:
                print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É")
                sys.exit(1)
        else:
            print("–û—Ç–º–µ–Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    else:
        print("\n‚úÖ –ü—Ä–æ–±–ª–µ–º —Å –ª–æ–≥–∞–º–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")

if __name__ == "__main__":
    main() 